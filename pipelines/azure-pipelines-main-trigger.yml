# Build for XamAR.Forms and XamAR.Native
# https://docs.microsoft.com/azure/devops/pipelines/languages/xamarin

name: $(majorMinorVersion).$(semanticVersion) # $(rev:r) # NOTE: rev resets when the default retention period expires

# pipeline variables
variables:
  majorMinorVersion: 0.2
  # semanticVersion counter is automatically incremented by one in each execution of pipeline
  # second parameter is seed value to reset to every time the referenced majorMinorVersion is changed
  semanticVersion: $[counter(variables['majorMinorVersion'], 0)]
  projectName: 'XamAR'
  buildConfiguration: 'Release'
  buildQueue: ''
  buildNative: false

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - src

pool:
  vmImage: 'macos-latest'

steps:
# To manually select a Xamarin SDK version on the Microsoft-hosted macOS agent,
# configure this task with the *Mono* version that is associated with the
# Xamarin SDK version that you need, and set the "enabled" property to true.
# See https://go.microsoft.com/fwlink/?linkid=871629
#- script: sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh 5_12_0
#  displayName: 'Select the Xamarin SDK version'
#  enabled: false

- task: PowerShell@2
  inputs:
    filePath: 'pipelines/GetProjectQueue.ps1'

- task: PowerShell@2
  inputs:
    filePath: 'pipelines/CheckBuildNative.ps1'
    arguments: '$(BuildQueue)'

- task: NuGetToolInstaller@1
  displayName: 'Install NuGet'

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: 'src/**/*.sln'
    includeNuGetOrg: true
  displayName: 'Restore NuGet packages for solution'

- task: MSBuild@1
  inputs:
    solution: 'src/**/XamAR.Forms.csproj'
    platform: 'AnyCPU'
    configuration: '$(BuildConfiguration)'
    msbuildArguments: '/t:pack /p:IncludeSymbols=true /p:SymbolPackageFormat=snupkg /p:PackageOutputPath=$(Build.ArtifactStagingDirectory)'
  displayName: 'Build and pack XamAR.Forms'

- task: MSBuild@1
  inputs:
    solution: 'src/**/XamAR.Native.csproj'
    platform: 'AnyCPU'
    configuration: '$(BuildConfiguration)'
    msbuildArguments: '/t:pack /p:IncludeSymbols=true /p:SymbolPackageFormat=snupkg /p:PackageOutputPath=$(Build.ArtifactStagingDirectory)'
  condition: buildNative
  displayName: 'Build and pack XamAR.Native'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/'
    ArtifactName: 'drop'
    publishLocation: 'Container'   
  displayName: 'Publish Pack Artifacts'

#- task: DotNetCoreCLI@2
#  inputs:
#    command: 'push'
#    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
#    nuGetFeedType: 'internal'
#    publishVstsFeed: '5c9d08c5-50c9-457d-84f9-f2402394e095'
